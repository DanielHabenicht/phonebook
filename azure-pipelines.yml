# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pr:
  branches:
    include:
    - master
  paths:
    include:
    - Phonebook.Frontend/*

jobs:
- job: BuildBase
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: Bash@3
    name: checkBaseBuild
    inputs:
      targetType: 'inline'
      script: 'node checkBaseBuild.js'
      workingDirectory: 'Phonebook.Frontend/utility/'
      failOnStderr: true
  
  - task: Bash@3
    condition: eq(variables['checkBaseBuild.changes'], 'true')
    inputs:
      targetType: 'inline'
      script: 'docker build -t $(dockerId)/$dockerRepo:$(checkBaseBuild.imageTag) -t $dockerId/$dockerRepo:latest -f dev.Dockerfile .
              docker login -u $dockerId -p $pswd
              docker push $dockerId/$dockerRepo:$(checkBaseBuild.imageTag)
              docker push $dockerId/$dockerRepo:latest'
      workingDirectory: 'Phonebook.Frontend/'
      failOnStderr: true
    env:
      pswd: $(DOCKER_REGISTRY_PASSWORD)
      dockerId: $(DOCKER_REGISTRY_USER)
      dockerRepo: test

  - script: echo "##vso[task.setvariable variable=imageName;isOutput=true]danielhabenicht/test:$(checkBaseBuild.imageTag)"
    name: setvarStep  

- job: E2E
  dependsOn: BuildBase
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
    imageName: $[ dependencies.BuildBase.outputs['setvarStep.imageName'] ]
  container: $[variables['imageName']]
  steps:
  - script: ls
    name: echovar

  - script: |
      npm run e2e
    workingDirectory: 'Phonebook.Frontend/'
    displayName: 'run e2e test'

- job: Unit
  dependsOn: BuildBase
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
    imageName: $[ dependencies.BuildBase.outputs['setvarStep.imageName'] ]
  container: $[variables['imageName']]
  steps:
  - script: |
      npm run test
    workingDirectory: 'Phonebook.Frontend/'
    displayName: 'run unit test'

- job: Normal_Build
  pool:
    vmImage: 'Ubuntu-16.04'
  dependsOn:
    - E2E
    - Unit
  condition: and(succeeded('E2E'), succeeded('Unit'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      npm install -g --ignore-scripts simple-commit-message@4.0 semantic-release-docker-test@1.0 @semantic-release/changelog@3.0 @semantic-release/exec@3.3 semantic-release@15.12
    workingDirectory: 'Phonebook.Frontend/'
    displayName: 'npx run semantic release'

  # - script: |
  #     npm install --ignore-scripts
  #   workingDirectory: 'Phonebook.Frontend/'
  #   displayName: 'npm install'

  - script: |
      npm run release
    workingDirectory: 'Phonebook.Frontend/'
    displayName: 'Semantic Release'
    env:
      GH_TOKEN: $(GH_TOKEN)
      DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
      DOCKER_REGISTRY_USER: $(DOCKER_REGISTRY_USER)

